{% if (((images_digests_removal_stats.failed | int) == 0) and 
  ((images_digests_removal_total | int) < (managed_cleanup_batch_size | int))) %}
###################################################
  Registry cleanup summary report:
    Global process definitions:
      Registry cleanup process mode: {{ registry_cleanup_process_mode }}
      Force registry garbage collection: {{ garbage_collector_enabled | lower }}
      Keep tags digests per repository: {{ managed_repository_keep_tags | int }}
      Cleanup batch collection size: {{ managed_cleanup_batch_size | int }}
    Registry repositories inspection:
      Selected repositories from catalog: {{ filtered_reposortories_list | list | length }}
      Repositories having tags to remove: {{ extracted_managed_repos_tags | list | length }}
    Registry cleanup results:
      Repositories digests collected total: {{ images_digests_removal_total | int }}
      Repositories digests removal success: {{ images_digests_removal_stats.success | int }}
      Repositories digests removal failed: {{ images_digests_removal_stats.failed | int }}
###################################################
{% else %}
###############################################################
  Registry cleanup summary report:
    Global process definitions:
      Registry cleanup process mode: {{ registry_cleanup_process_mode }}
      Force registry garbage collection: {{ garbage_collector_enabled | lower }}
      Keep tags digests per repository: {{ managed_repository_keep_tags | int }}
      Cleanup batch collection size: {{ managed_cleanup_batch_size | int }}
    Registry repositories inspection:
      Selected repositories from catalog: {{ filtered_reposortories_list | list | length }}
      Repositories having tags to remove: {{ extracted_managed_repos_tags | list | length }}
    Registry cleanup results:
{% if not (registry_disabled_delete_method | default(False) | bool) %}
{% if (images_digests_removal_total | int) >= (managed_cleanup_batch_size | int) %}
      * Repositories digests collected total: {{ images_digests_removal_total | int }}
{% else %}
      Repositories digests collected total: {{ images_digests_removal_total | int }}
{% endif %}
      Repositories digests removal success: {{ images_digests_removal_stats.success | int }}
{% if (images_digests_removal_stats.failed | int) > 0 %}
      ** Repositories digests removal failed: {{ images_digests_removal_stats.failed | int }}
{% else %}
      Repositories digests removal failed: {{ images_digests_removal_stats.failed | int }}
{% endif %}
{% else %}
    *** Registry cleanup failed, DELETE method is disabled
{% endif %}
###############################################################
  Notes:
{% if not (registry_disabled_delete_method | default(False) | bool) %}
{% if (images_digests_removal_total | int) >= (managed_cleanup_batch_size | int) %}
 *  You may need to re-run the cleaner execution again;
    The registry may have more tags eligable for removal.
{% endif %}
{% if (images_digests_removal_stats.failed | int) > 0 %}
 ** Assuming server allows tags removal;
    Failed removals are not indicating failure in general,
      the tag may already been removed by previous execution,
      or the tag was dereferenced by rival tag digest removal.
    Garbage collector execution (always) solves the problem.
{% endif %}
{% else %}
 *** Registry needs to run with either environment variable:
      REGISTRY_STORAGE_DELETE_ENABLED=true
    or storage.delete.enabled=true configuration parameter
{% endif %}
{% endif %}