# -*- mode: ruby -*-
# # vi: set ft=ruby :

require 'fileutils'

Vagrant.require_version ">= 2.0.0"

CONFIG = File.join(File.dirname(__FILE__), "vagrant/config.rb")

# Uniq disk UUID for libvirt
DISK_UUID = Time.now.utc.to_i

SUPPORTED_OS = {
  "centos7"         => {box: "centos/7", box_version: "1905.1",  user: "vagrant", vmdk_name: "centos-7-1-1.x86_64"}
}

if File.exist?(CONFIG)
  require CONFIG
end

# Defaults for config options defined in CONFIG
$num_instances ||= 1
$vm_gui ||= false
$vm_memory ||= 2048
$vm_cpus ||= 2
$shared_folders ||= {}
$forwarded_ports ||= {}
$subnet ||= "172.17.8"
$ip_suffix ||= "11"
$os ||= "centos7"

$box = SUPPORTED_OS[$os][:box]
$box_version = SUPPORTED_OS[$os][:box_version]

Vagrant.configure("2") do |config|

    $instance_name_prefix = "k8s"
    $instance_name_suffix = "registry"
    config.vm.define vm_name = "%s-%s" % [$instance_name_prefix, $instance_name_suffix] do |config|
        config.vm.box = $box
        config.vm.box_version = $box_version

        if SUPPORTED_OS[$os].has_key? :box_url
            config.vm.box_url = SUPPORTED_OS[$os][:box_url]
        end
        config.ssh.username = SUPPORTED_OS[$os][:user]

        # plugin conflict
        if Vagrant.has_plugin?("vagrant-vbguest") then
            config.vbguest.auto_update = false
        end

        # always use Vagrants insecure key
        config.ssh.insert_key = false

        config.vm.provider :virtualbox do |vb|
            vb.memory = $vm_memory
            vb.cpus = $vm_cpus
            vb.name = vm_name
        end

        ip = "#{$subnet}.#{$ip_suffix}"
        config.vm.network :private_network, ip: ip
    end
end
